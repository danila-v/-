#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <chrono>

std::vector<int> generate_random_list(int n, int min_val = 0, int max_val = 1000) {
    std::vector<int> arr(n);
    for (int i = 0; i < n; ++i) {
        arr[i] = min_val + rand() % (max_val - min_val + 1);
    }
    return arr;
}

int main() {
    srand(static_cast<unsigned int>(time(nullptr)));
    std::vector<int> sizes = {1000, 10000, 100000};
    
    for (int n : sizes) {
        std::vector<int> arr = generate_random_list(n);
        int sum_regular = 0;
        int sum_prefix = 0;
        
        std::cout << "=== Размер массива: " << n << " ===\n";
        
        auto start_regular = std::chrono::high_resolution_clock::now();
        for (int i = 0; i < n; ++i) {
            sum_regular += arr[i];
        }
        auto end_regular = std::chrono::high_resolution_clock::now();
        std::chrono::duration<double> time_regular = end_regular - start_regular;
        
        auto start_prefix = std::chrono::high_resolution_clock::now();
        std::vector<int> prefix(n + 1, 0);
        for (int i = 0; i < n; ++i) {
            prefix[i + 1] = prefix[i] + arr[i];
        }
        sum_prefix = prefix[n];
        auto end_prefix = std::chrono::high_resolution_clock::now();
        std::chrono::duration<double> time_prefix = end_prefix - start_prefix;
        
        std::cout << "Обычный цикл: сумма = " << sum_regular 
                  << ", время = " << time_regular.count() << " сек\n";
        std::cout << "Префиксные суммы: сумма = " << sum_prefix 
                  << ", время = " << time_prefix.count() << " сек\n";
        
        if (time_regular.count() < time_prefix.count()) {
            std::cout << "Обычный цикл быстрее в " 
                      << time_prefix.count() / time_regular.count() << " раз\n";
        } else {
            std::cout << "Префиксные суммы быстрее в " 
                      << time_regular.count() / time_prefix.count() << " раз\n";
        }
        std::cout << "---------------------\n";
    }
    return 0;
}
