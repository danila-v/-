#include <iostream>
#include <vector>
#include <cstdlib> 
#include <ctime>   
#include <chrono>  

void bubble_sort(std::vector<int>& arr) {
    size_t n = arr.size();
    for (size_t i = 0; i < n - 1; ++i) {
        for (size_t j = 0; j < n - i - 1; ++j) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

std::vector<int> generate_random_list(int n, int min_val = 0, int max_val = 1000) {
    std::vector<int> arr(n);
    for (int i = 0; i < n; ++i) {
        arr[i] = min_val + rand() % (max_val - min_val + 1);
    }
    return arr;
}

int main() {
    srand(static_cast<unsigned int>(time(nullptr))); 

    std::vector<int> sizes = {100, 1000, 10000};
    
    for (int n : sizes) {
        std::vector<int> arr = generate_random_list(n);

        auto start = std::chrono::high_resolution_clock::now();
        bubble_sort(arr);
        auto end = std::chrono::high_resolution_clock::now();

        std::chrono::duration<double> elapsed = end - start;

        std::cout << "Размер массива: " << n << "\n";
        std::cout << "Время сортировки: " << elapsed.count() << " секунд\n";
        std::cout << "Сложность алгоритма: O(n^2)\n";
        std::cout << "----------------\n";
    }

    return 0;
}
